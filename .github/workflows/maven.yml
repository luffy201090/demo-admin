name: Demo CI CD

on:
  push:
    branches: [ "main" ]

jobs:
  build_maven:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: ./mvnw -Pprod clean package -DskipTests
    - name: Upload target
      uses: actions/upload-artifact@v3
      with:
        name: target_jar
        path: target/demo-admin-0.0.1-SNAPSHOT.jar
  build_docker_image:
    needs: build_maven
    outputs:
      VERSION: ${{ steps.export_version.outputs.EXPORT_VERSION }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download target
      uses: actions/download-artifact@v3
      with:
        name: target_jar
    - id: generate_version
      name: Generate VERSION
      run: echo "VERSION=$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV
    - id: export_version
      name: Export VERSION
      run: echo "EXPORT_VERSION=$VERSION" >> $GITHUB_OUTPUT
    - name: Build image
      run: docker build -t demo-admin:$VERSION .
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Log in to DO Container Registry
      run: doctl registry login --expiry-seconds 600
    - name: Tag image
      run:
        docker tag demo-admin:$VERSION registry.digitalocean.com/luffy-container-registry/demo-admin:$VERSION
    - name: Push image to DO Container Registry
      run: docker push registry.digitalocean.com/luffy-container-registry/demo-admin:$VERSION
  deploy:
    needs: [build_maven, build_docker_image]
    runs-on: ubuntu-latest
    steps:
    - name: Prepare
      run: echo " ${{ needs.build_docker_image.outputs.VERSION }}"
    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@master
      env:
        VERSION: ${{ needs.build_docker_image.outputs.VERSION }}
        MAGIC_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USERNAME}}
        key: ${{secrets.KEY}}
        envs: VERSION, MAGIC_TOKEN, DATABASE_PASSWORD
        script: |
          echo "version is $VERSION"
          docker login -u $MAGIC_TOKEN -p $MAGIC_TOKEN registry.digitalocean.com
          docker pull registry.digitalocean.com/luffy-container-registry/demo-admin:$VERSION
          cd deploy/demo-admin
          export IMAGE_VERSION=$VERSION
          docker-compose down && docker-compose up -d